//===== rAthena Script =======================================
//= Paid Script
//============================================================
-	script	::GuildJopLimit_OnMap	-1,{
OnPCLoadMapEvent:
	if(inarray(.map_list$,strcharinfo(3)) != -1){
		if(.GUILD_JOB_LIMIT[Class]){
			getmapunits(BL_PC,strcharinfo(3),.@N$);
			for(.@i=0;.@i<getarraysize(.@N$);.@i++){
				if(getcharid(2,.@N$[.@i]) == getcharid(2)){
					if(readparam(Class,.@N$[.@i]) == Class){
						if(getcharid(0,.@N$[.@i]) != getcharid(0)){
							.@class++;
						}
					}
				}
			}
			if(.@class >= .GUILD_JOB_LIMIT[Class]){
				addtimer 1000,strnpcinfo(3) + "::OnKicked";
				warp("SavePoint",0,0);
			}
		}
	}
end;

OnKicked:
	mes "[WoE Manager]";
	mes "You have been warped back to your save point";
	mes "Looks like your guild already have a total of " + .GUILD_JOB_LIMIT[Class] + " " + jobname(Class) + "s inside the castle!";
	next;
	mes "[WoE Manager]";
	mes "Maximum of " + .GUILD_JOB_LIMIT[Class] + " " + jobname(Class) + "s per guild are allowed to enter the castle at the same time.";
end;

	function	AddLimit	{
		.GUILD_JOB_LIMIT[getarg(0)] = getarg(1);
		return;
	}

OnInit:
	//List of the maps where the System is Active in it!
	setarray .map_list$,
		//WOE FE Castles
		"aldeg_cas01","aldeg_cas02","aldeg_cas03","aldeg_cas04","aldeg_cas05",
		"gefg_cas01","gefg_cas02","gefg_cas03","gefg_cas04","gefg_cas05",
		"payg_cas01","payg_cas02","payg_cas03","payg_cas04","payg_cas05",
		"prtg_cas01","prtg_cas02","prtg_cas03","prtg_cas04","prtg_cas05",
		//WOE SE Castles
		"schg_cas01","schg_cas02","schg_cas03","schg_cas04","schg_cas05",
		"arug_cas01","arug_cas02","arug_cas03","arug_cas04","arug_cas05",
		//WOE NG Castles
		"nguild_alde","nguild_gef","nguild_pay","nguild_prt",
		//WOE TE Castles
		"te_prtcas01","te_prtcas02","te_prtcas03","te_prtcas04","te_prtcas05",
		"te_aldecas1","te_aldecas2","te_aldecas3","te_aldecas4","te_aldecas5";

	//AddLimit(<JOB_ID>,<Count>);
	//You can use the Job ID , OR The Job constant aka JOB_*
	//AddLimit(4019,1); Biochemist 1 per guild in the map.
	//AddLimit(JOB_KNIGHT,8); //second Class ,Knight , 8 per guild in the map

	for(.@i=0;.@i<getarraysize(.map_list$);.@i++){
		setmapflag(.map_list$[.@i],MF_LOADEVENT);
	}
end;
}